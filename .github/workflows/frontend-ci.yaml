name: Frontend Continuous Integration

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js 14
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Perform a cache action to restore cache before dependency install
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./starter/frontend
        run: npm ci

      - name: Run linting
        working-directory: ./starter/frontend
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js 14
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Perform a cache action to restore cache before dependency install
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./starter/frontend
        run: npm ci

      - name: Run tests
        working-directory: ./starter/frontend
        run: npm run test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js 14
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Perform a cache action to restore cache before dependency install
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./starter/frontend
        run: npm ci

      - name: Build application using Docker
        working-directory: ./starter/frontend
        run: npm run build
