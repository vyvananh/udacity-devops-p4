name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Build and push ECR image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        aws eks update-kubeconfig --name cluster
        export EXTERNALIP=$(kubectl get svc backend -o=jsonpath='{.status.loadBalancer. ingress [0].hostname}{"\n"}{.status.loadBalancer. ingress[0].ip}')
        docker build -t $REGISTRY/udacity-p4-frontend:latest --build-arg=REACT_APP_MOVIE_API_URL=http://$EXTERNAL_IP .
        docker push $REGISTRY/udacity-p4-frontend:latest

    - name: Cache Docker image
      uses: actions/cache@v3
      with:
        path: ~/docker-cache
        key: docker-${{ github.sha }}-frontend
        restore-keys: |
          docker-${{ github.sha }}-

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name cluster

    - name: Run init.sh
      working-directory: ./setup
      run: ./init.sh || true

    - name: Set Docker image in Kustomize
      working-directory: ./starter/frontend/k8s
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: kustomize edit set image frontend=$REGISTRY/udacity-p4-frontend:latest

    - name: Apply Kubernetes resources
      working-directory: ./starter/frontend/k8s
      run: kustomize build | kubectl apply -f -
