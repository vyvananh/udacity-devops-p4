name: Backend Continuous Integration

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install Pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv flask_cors flake8

    - name: Run linting
      run: pipenv run lint

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install Pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv flask_cors flake8 pytest

    - name: Run tests
      run: pipenv run test
  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"

      - name: Build and push ECR image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $REGISTRY/udacity-p4-backend:latest .
          docker push $REGISTRY/udacity-p4-backend:latest

      - name: Cache Docker image
        uses: actions/cache@v3
        with:
          path: ~/docker-cache
          key: docker-${{ github.sha }}-backend
          restore-keys: |
            docker-${{ github.sha }}-

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: "latest"

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name cluster

      - name: Run init.sh
        working-directory: ./setup
        run: ./init.sh || true

      - name: Set Docker image in Kustomize
        working-directory: ./starter/backend/k8s
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: latest
        run: kustomize edit set image backend=$REGISTRY/udacity-p4-backend:latest

      - name: Apply Kubernetes resources
        working-directory: ./starter/backend/k8s
        run: kustomize build | kubectl apply -f -
